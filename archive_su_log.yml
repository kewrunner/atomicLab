---
- name: Copy su/auth log to /tmp and compress to .tar.gz
  hosts: all
  gather_facts: true

  vars:
    tmp_dir: /tmp

  tasks:
    - name: Detect distro family
      ansible.builtin.set_fact:
        is_ubuntu: "{{ (ansible_facts.distribution | lower) == 'ubuntu' }}"

    - name: Build candidate su/auth log list (ordered)
      ansible.builtin.set_fact:
        su_candidates: >-
          {{ (is_ubuntu | ternary(
                ['/var/log/auth.log'],
                ['/var/log/secure', '/var/log/sulog', '/var/log/messages', '/var/log/auth.log']
              )) }}

    - name: Stat candidate logs
      ansible.builtin.stat:
        path: "{{ item }}"
      loop: "{{ su_candidates }}"
      register: su_stats

    - name: Pick first existing log
      ansible.builtin.set_fact:
        su_log_found: "{{ (su_stats.results | selectattr('stat.exists') | map(attribute='stat.path') | list | first) | default(omit) }}"
        su_base: "{{ ((su_stats.results | selectattr('stat.exists') | map(attribute='stat.path') | list | first) | basename) | default(omit) }}"

    - name: Fail if no suitable su/auth log found
      ansible.builtin.fail:
        msg: "No su/auth log found. Checked: {{ su_candidates }}"
      when: su_log_found is not defined

    - name: Ensure /tmp exists with sane perms
      ansible.builtin.file:
        path: "{{ tmp_dir }}"
        state: directory
        mode: "1777"

    - name: Copy su/auth log into /tmp
      ansible.builtin.copy:
        src: "{{ su_log_found }}"
        dest: "{{ tmp_dir }}/{{ su_base }}"
        remote_src: true
        mode: "0640"

    - name: Create tar.gz archive in /tmp (via tar)
      ansible.builtin.command:
        cmd:
          - /usr/bin/tar
          - -czf
          - "{{ tmp_dir }}/{{ su_base }}.tar.gz"
          - "{{ su_base }}"
        chdir: "{{ tmp_dir }}"
        creates: "{{ tmp_dir }}/{{ su_base }}.tar.gz"

    - name: Report archive path
      ansible.builtin.debug:
        msg:
          source_log: "{{ su_log_found }}"
          copied_to: "{{ tmp_dir }}/{{ su_base }}"
          archive: "{{ tmp_dir }}/{{ su_base }}.tar.gz"
