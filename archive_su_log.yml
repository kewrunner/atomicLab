---
- name: Copy su log to /tmp and compress to .tar.gz (cross-distro)
  hosts: all
  gather_facts: true

  vars:
    tmp_dir: /tmp

  tasks:
    - name: Determine distro flags
      ansible.builtin.set_fact:
        is_ubuntu: "{{ (ansible_facts.distribution | lower) == 'ubuntu' }}"

    - name: Build candidate su log list (ordered by preference)
      ansible.builtin.set_fact:
        su_candidates: >-
          {{ (is_ubuntu | ternary(
                ['/var/log/sulog', '/var/log/auth.log', '/var/log/secure'],
                ['/var/log/sulog', '/var/log/secure', '/var/log/auth.log']
              )) }}

    - name: Stat candidate su logs
      ansible.builtin.stat:
        path: "{{ item }}"
      loop: "{{ su_candidates }}"
      register: su_stats

    - name: Choose first existing su log
      ansible.builtin.set_fact:
        su_log_found: >-
          {{ (su_stats.results
              | selectattr('stat.exists')
              | map(attribute='stat.path')
              | list
              | first) | default(omit) }}

    - name: Fail if no su log located
      ansible.builtin.fail:
        msg: "No su-related log found. Checked: {{ su_candidates | join(', ') }}"
      when: su_log_found is not defined

    - name: Compute destination paths and archive name
      ansible.builtin.set_fact:
        su_basename: "{{ su_log_found | basename }}"
        su_copy_path: "{{ tmp_dir }}/{{ su_log_found | basename }}"
        su_archive_path: "{{ tmp_dir }}/{{ (su_log_found | basename) }}.tar.gz"

    - name: Copy su log into /tmp
      ansible.builtin.copy:
        src: "{{ su_log_found }}"
        dest: "{{ su_copy_path }}"
        remote_src: true
        mode: '0640'

    - name: Create tar.gz archive in /tmp
      ansible.builtin.archive:
        path: "{{ su_copy_path }}"
        dest: "{{ su_archive_path }}"
        format: gz
        remove: false

    - name: Report results
      ansible.builtin.debug:
        msg:
          picked_log: "{{ su_log_found }}"
          copied_to: "{{ su_copy_path }}"
          archive: "{{ su_archive_path }}"
