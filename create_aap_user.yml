---
- name: Create _aapautomate, set password, ensure home and private .aaa
  hosts: all
  gather_facts: false

  vars:
    aap_user: "_aapautomate"
    aap_home: "/home/_aapautomate"

    # Plaintext password as requested (kept in vars for clarity).
    # NOTE: It's safer to store this in a vault/credential.
    aap_plain_password: "aaaaaaaaaaaaaa"

    # Fixed salt so the hash is deterministic; adjust if desired.
    # Because we use update_password: on_create, re-runs won't reset the password.
    aap_password_salt: "bbbbbbbbbbbbbbbb"

  tasks:
    - name: Compute SHA-512 password hash for user module
      no_log: true
      ansible.builtin.set_fact:
        aap_password_hash: "{{ aap_plain_password | password_hash('sha512', aap_password_salt) }}"

    - name: Ensure user exists with home directory
      ansible.builtin.user:
        name: "{{ aap_user }}"
        password: "{{ aap_password_hash }}"
        create_home: true
        home: "{{ aap_home }}"
        shell: /bin/bash
        state: present
        update_password: on_create

    - name: Ensure home directory ownership and permissions
      ansible.builtin.file:
        path: "{{ aap_home }}"
        state: directory
        owner: "{{ aap_user }}"
        group: "{{ aap_user }}"
        mode: "0750"

    - name: Create private .aaa file (0600, owned by _aapautomate)
      ansible.builtin.file:
        path: "{{ aap_home }}/.aaa"
        state: touch
        owner: "{{ aap_user }}"
        group: "{{ aap_user }}"
        mode: "0600"

    - name: Report created artifacts
      ansible.builtin.debug:
        msg:
          user: "{{ aap_user }}"
          home: "{{ aap_home }}"
          aaa_file: "{{ aap_home }}/.aaa"
